<!--
  ~ Copyright 2013 Joachim Ansorg, mail@ansorg-it.com
  ~ File: plugin.xml, Class: plugin.xml
  ~ Last modified: 2013-05-12
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~    http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<idea-plugin version="2" url="https://github.com/jansorg/BashSupport">
    <resource-bundle>com.ansorgit.plugins.bash.bash</resource-bundle>

    <name>BashSupport</name>
    <category>Custom Languages</category>
    <version>1.5.1</version>

    <vendor url="http://www.ansorg-it.com/" email="mail@ansorg-it.com">Joachim Ansorg</vendor>

    <!-- Requires IDEA 14.0 -->
    <idea-version since-build="139.0" until-build="139.99999"/>

    <!-- Mark the plugin as compatible with RubyMine and other products based on the IntelliJ platform -->
    <depends>com.intellij.modules.lang</depends>
    <depends optional="true" config-file="intelliLang-bashsupport.xml">org.intellij.intelliLang</depends>

    <description><![CDATA[<html>
    Bash language support for IntelliJ.<br/>
    Supports syntax highlighting, rename refactoring, documentation lookup, inspections, quickfixes and much more.
    </html>]]></description>

    <change-notes><![CDATA[
    <html>
       <b>Changes in version 1.5.1 compared to 1.4.x:</b>
       <ul>
           <li>Features:<br/>
               <ul>
                   <li>#90: Language injection into unevaluated heredoc content, single and double quoted strings</li>
                   <li>#274: Spellchecker support for double-quoted strings, single-quoted strings and heredoc content</li>
                   <li>Bash code passed to eval in single quotes ('') is now parsed, too</li>
                   <li>Files usages in strings are now processed during a file rename if the option is enabled.</li>
                   <li>Renaming files in non-source directories</li>
                   <li>References to other Bash script files will now be renamed if the filename is changed</li>
                   <li>Bash version 4 support is now enabled by default</li>
               </ul>
           </li>
           <li>Bugs:<br/>
               <ul>
                   <li>#201: Cannot parse logical not in arithmetic expressions</li>
                   <li>#206: NPE in ProgramParametersConfigurator</li>
                   <li>#223: Update failed for AnAction with ID=Bash.NewBashScript: Already disposed</li>
                   <li>#228 Support for the trap command.</li>
                   <li>#237: BashSupport not saving globals entered into "Registered global variables" settings</li>
                   <li>#238: Replace with evaluated expansion" works incorrectly</li>
                   <li>#265: Digit $ is invalid with base 10</li>
                   <li>#266: Valid parameter expansion ${#} marked as an error</li>
                   <li>#271: Empty subshell rejected as invalid</li>
                   <li>#279: Incorrect parsing and 'Unresolved variable' report for heredocs</li>
                   <li>#243: Single line case statement parse error</li>
                   <li>#246: Minor Single Quote Escaping Issue</li>
                   <li>Heredoc parsing improvement: The processing is more robust, more correct and faster</li>
                   <li>Fixed renaming of filenames in unevaluated strings, e.g. 'file.bash'</li>
                   <li>New Bash files are now created from a template. If you want to customize the default script you can modify the template "Bash Script" in the IntelliJ settings.</li>
                   <li>Fixed renaming of Bash files, IntelliJ had a feature for all files to turn off search for references. This is now disabled for Bash files. References are always changed if a Bash file is renamed.</li>
                   <li>Fixed Bash file renaming, file references to Bash files are changed now</li>
                   <li>No keyword completions while typing in a Bash comment</li>
                   <li>No live template completions while typing in a Bash comment</li>
               </ul>
           </li>
       </ul>

       <br/>
       <a href="https://github.com/jansorg/BashSupport/blob/master/Changelog.md">Full changelog</a>

        <br/><br/>
        <p>To all, who contributed to my wedding campaign: You are incredible and your kindness beyond my expectations! :)
            I'm very grateful for all your great support and kind words. I read all your comments and appreciated every gift.
            Thank you very much!<br/>
            A picture, as promised, is available here: <a href="http://www.ansorg-it.com/wedding.jpg">http://www.ansorg-it.com/wedding.jpg</a></p>
    </html>
    ]]>
    </change-notes>

    <application-components>
        <component>
            <implementation-class>com.ansorgit.plugins.bash.lang.BashLoader</implementation-class>
        </component>

        <component>
            <implementation-class>com.ansorgit.plugins.bash.settings.facet.BashFacetLoader</implementation-class>
        </component>

        <component>
            <implementation-class>com.ansorgit.plugins.bash.editor.codecompletion.BashPathCommandCompletion</implementation-class>
        </component>
    </application-components>

    <project-components>
        <component>
            <implementation-class>com.ansorgit.plugins.bash.settings.BashProjectSettingsComponent</implementation-class>
        </component>
    </project-components>

    <!-- Plugin's module components -->
    <module-components>
    </module-components>

    <actions>
        <!--
                <action id="BashErrorReporter.TriggerException"
                        class="nu.studer.idea.errortesting.TriggerExceptionAction"
                        text="Trigger Exception"
                        description="Triggers an exception">
                    <add-to-group group-id="ToolsMenu" anchor="last"/>
                </action>
-->
        <action id="Bash.NewBashScript" class="com.ansorgit.plugins.bash.actions.NewBashFileAction"
                text="Bash Script" description="Create new Bash script file">
            <add-to-group group-id="NewGroup" relative-to-action="NDNewFile" anchor="after"/>
        </action>


        <!-- A subset of the REPL actions that should be displayed in the panel toolbar. -->
        <group id="Bash.REPL.Group"
               class="com.intellij.openapi.actionSystem.DefaultActionGroup"
               text="Bash REPL" description="Bash" popup="false">

            <action id="com.ansorgit.plugins.bash.actions.AddReplAction"
                    class="com.ansorgit.plugins.bash.actions.AddReplAction" text="Add new Bash console"
                    description="Open a new Bash console window">
            </action>

            <add-to-group group-id="ToolsMenu" anchor="last"/>
        </group>
    </actions>

    <extensions defaultExtensionNs="com.intellij">
        <fileTypeFactory implementation="com.ansorgit.plugins.bash.file.BashFileTypeLoader"/>

        <!-- Syntax highlighting -->
        <syntaxHighlighter key="Bash" implementationClass="com.ansorgit.plugins.bash.editor.highlighting.BashSyntaxHighlighter"/>

        <colorSettingsPage implementation="com.ansorgit.plugins.bash.editor.highlighting.BashColorsAndFontsPage"/>

        <additionalTextAttributes scheme="Default" file="colors/BashDefault.xml"/>
        <additionalTextAttributes scheme="Darcula" file="colors/BashDarcula.xml"/>

        <!--Language extensions -->
        <lang.braceMatcher language="Bash" implementationClass="com.ansorgit.plugins.bash.editor.highlighting.BashBraceMatcher"/>

        <lang.commenter language="Bash" implementationClass="com.ansorgit.plugins.bash.editor.highlighting.BashCommenter"/>

        <lang.parserDefinition language="Bash" implementationClass="com.ansorgit.plugins.bash.lang.parser.BashParserDefinition"/>

        <lang.foldingBuilder language="Bash" implementationClass="com.ansorgit.plugins.bash.editor.codefolding.BashFoldingBuilder"/>

        <lang.psiStructureViewFactory language="Bash" implementationClass="com.ansorgit.plugins.bash.structureview.BashStructureViewFactory"/>

        <lang.refactoringSupport language="Bash" implementationClass="com.ansorgit.plugins.bash.refactoring.BashRefactoringSupport"/>

        <lang.documentationProvider language="Bash" implementationClass="com.ansorgit.plugins.bash.documentation.BashDocumentationProvider"/>

        <lang.findUsagesProvider language="Bash" implementationClass="com.ansorgit.plugins.bash.editor.usages.BashFindUsagesProvider"/>

        <lang.formatter language="Bash" implementationClass="com.ansorgit.plugins.bash.editor.formatting.BashFormattingModelBuilder"/>

        <lang.tokenSeparatorGenerator language="Bash" implementationClass="com.ansorgit.plugins.bash.refactoring.BashTokenSeparatorGenerator"/>

        <languageInjector implementation="com.ansorgit.plugins.bash.lang.BashLanguageInjector"/>

        <lang.elementManipulator forClass="com.ansorgit.plugins.bash.lang.psi.api.BashFileReference"
                                 implementationClass="com.ansorgit.plugins.bash.lang.psi.impl.refactoring.BashFileReferenceManipulator" />
        <lang.elementManipulator forClass="com.ansorgit.plugins.bash.lang.psi.api.command.BashCommand"
                                 implementationClass="com.ansorgit.plugins.bash.lang.psi.impl.refactoring.BashCommandManipulator" />
        <lang.elementManipulator forClass="com.ansorgit.plugins.bash.lang.psi.api.word.BashWord"
                                 implementationClass="com.ansorgit.plugins.bash.lang.psi.impl.refactoring.BashWordManipulator" />
        <lang.elementManipulator forClass="com.ansorgit.plugins.bash.lang.psi.api.BashString"
                                 implementationClass="com.ansorgit.plugins.bash.lang.psi.impl.refactoring.BashStringManipulator" />
        <lang.elementManipulator forClass="com.ansorgit.plugins.bash.lang.psi.api.heredoc.BashHereDoc"
                                 implementationClass="com.ansorgit.plugins.bash.lang.psi.impl.refactoring.BashHereDocManipulator" />

        <renamePsiElementProcessor implementation="com.ansorgit.plugins.bash.lang.psi.impl.BashFileRenameProcessor"/>

        <readWriteAccessDetector implementation="com.ansorgit.plugins.bash.editor.accessDetector.BashReadWriteAccessDetector"/>

        <completion.contributor language="Bash" implementationClass="com.ansorgit.plugins.bash.editor.codecompletion.BashCompletionContributor"/>

        <idIndexer filetype="Bash" implementationClass="com.ansorgit.plugins.bash.lang.psi.BashIdIndexer" />
        <todoIndexer filetype="Bash" implementationClass="com.ansorgit.plugins.bash.lang.psi.BashTodoIndexer" />

        <defaultLiveTemplatesProvider implementation="com.ansorgit.plugins.bash.editor.liveTemplates.BashLiveTemplatesProvider" />
        <liveTemplateContext implementation="com.ansorgit.plugins.bash.editor.liveTemplates.BashLiveTemplatesContext"/>

        <internalFileTemplate name="Bash Script"/>

        <annotator language="Bash" implementationClass="com.ansorgit.plugins.bash.editor.annotator.BashAnnotator"/>

        <codeInsight.lineMarkerProvider language="Bash" implementationClass="com.ansorgit.plugins.bash.editor.BashLineMarkerProvider"/>

        <frameworkSupport implementation="com.ansorgit.plugins.bash.settings.facet.BashFacetTypeFrameworkSupportProvider"/>

        <runConfigurationProducer implementation="com.ansorgit.plugins.bash.runner.BashRunConfigProducer"/>
        <configurationType implementation="com.ansorgit.plugins.bash.runner.BashConfigurationType"/>
        <programRunner implementation="com.ansorgit.plugins.bash.runner.BashRunner"/>

        <moveFileHandler implementation="com.ansorgit.plugins.bash.refactoring.BashFileMoveHandler" id="BashMove" />

        <spellchecker.support implementationClass="com.ansorgit.plugins.bash.editor.BashSpellCheckingSupport" language="Bash" />

        <!-- Repl-->
        <!--
        <projectService serviceInterface="com.ansorgit.plugins.bash.repl.ReplManager"
                        serviceImplementation="com.ansorgit.plugins.bash.repl.ReplManager"/>
        -->

        <projectConfigurable groupId="language" instance="com.ansorgit.plugins.bash.settings.BashProjectSettingsConfigurable" id="BashSupport" key="settings.project.groupTitle" bundle="com.ansorgit.plugins.bash.bash" />

        <!-- Error reporter-->
        <errorHandler implementation="nu.studer.idea.errorreporting.PluginErrorReportSubmitter"/>

        <!-- stubs -->
        <stubElementTypeHolder class="com.ansorgit.plugins.bash.lang.parser.BashElementTypes"/>

        <stubIndex implementation="com.ansorgit.plugins.bash.lang.psi.stubs.index.BashFunctionNameIndex"/>
        <stubIndex implementation="com.ansorgit.plugins.bash.lang.psi.stubs.index.BashScriptNameIndex"/>
        <stubIndex implementation="com.ansorgit.plugins.bash.lang.psi.stubs.index.BashFullScriptNameIndex"/>
        <stubIndex implementation="com.ansorgit.plugins.bash.lang.psi.stubs.index.BashIncludedFilenamesIndex"/>
        <stubIndex implementation="com.ansorgit.plugins.bash.lang.psi.stubs.index.BashIncludeCommandIndex"/>
        <stubIndex implementation="com.ansorgit.plugins.bash.lang.psi.stubs.index.BashCommandNameIndex"/>
        <stubIndex implementation="com.ansorgit.plugins.bash.lang.psi.stubs.index.BashVarDefIndex"/>
        <!-- todo implement com.intellij.psi.impl.include.FileIncludeProvider  -->

        <localInspection language="Bash" level="WARNING" groupKey="inspection.groupName"
                         shortName="BashFixShebang"
                         key="inspection.fixShebang.name"
                         enabledByDefault="true"
                         implementationClass="com.ansorgit.plugins.bash.editor.inspections.inspections.FixShebangInspection"/>

        <localInspection language="Bash" level="WARNING" groupKey="inspection.groupName" runForWholeFile="true"
                         shortName="BashAddShebang"
                         key="inspection.addShebang.name"
                         enabledByDefault="true"
                         implementationClass="com.ansorgit.plugins.bash.editor.inspections.inspections.AddShebangInspection"/>

        <localInspection language="Bash" level="WEAK WARNING" groupKey="inspection.groupName"
                         shortName="BashSimpleVarUsage"
                         key="inspection.simpleVarUsage.name"
                         enabledByDefault="true"
                         implementationClass="com.ansorgit.plugins.bash.editor.inspections.inspections.SimpleVarUsageInspection"/>

        <localInspection language="Bash" level="WEAK WARNING" groupKey="inspection.groupName"
                         shortName="BashGlobalLocalVarDef"
                         key="inspection.globalLocalVar.name"
                         enabledByDefault="true"
                         implementationClass="com.ansorgit.plugins.bash.editor.inspections.inspections.GlobalLocalVarDefInspection"/>

        <localInspection language="Bash" level="WEAK WARNING" groupKey="inspection.groupName"
                         shortName="BashWrapFunction"
                         key="inspection.wrapFunction.name"
                         enabledByDefault="true"
                         implementationClass="com.ansorgit.plugins.bash.editor.inspections.inspections.FunctionDefInspection"/>

        <localInspection language="Bash" level="WEAK WARNING" groupKey="inspection.groupName"
                         shortName="BashWrapWord"
                         key="inspection.wrapWord.name"
                         enabledByDefault="false"
                         implementationClass="com.ansorgit.plugins.bash.editor.inspections.inspections.WrapWordInStringInspection"/>

        <localInspection language="Bash" level="WEAK WARNING" groupKey="inspection.groupName"
                         shortName="BashReplaceWithBackquote"
                         key="inspection.replaceWithBackquote.name"
                         enabledByDefault="false"
                         implementationClass="com.ansorgit.plugins.bash.editor.inspections.inspections.ConvertSubshellInspection"/>

        <localInspection language="Bash" level="WARNING" groupKey="inspection.groupName"
                         shortName="BashDuplicateFunction"
                         key="inspection.duplicateFunction.name"
                         enabledByDefault="true"
                         implementationClass="com.ansorgit.plugins.bash.editor.inspections.inspections.DuplicateFunctionDefInspection"/>

        <localInspection language="Bash" level="WARNING" groupKey="inspection.groupName"
                         shortName="BashMissingInclude"
                         key="inspection.missingInclude.name"
                         enabledByDefault="true"
                         implementationClass="com.ansorgit.plugins.bash.editor.inspections.inspections.MissingIncludeFileInspection"/>

        <localInspection language="Bash" level="WARNING" groupKey="inspection.groupName"
                         shortName="BashRecursiveInclusion"
                         key="inspection.recursiveInclusion.name"
                         enabledByDefault="true"
                         implementationClass="com.ansorgit.plugins.bash.editor.inspections.inspections.RecursiveIncludeFileInspection"/>

        <localInspection language="Bash" level="WARNING" groupKey="inspection.groupName"
                         shortName="BashEvaluateExpression"
                         key="inspection.evaluateExpansion.name"
                         enabledByDefault="true"
                         implementationClass="com.ansorgit.plugins.bash.editor.inspections.inspections.EvaluateExpansionInspection"/>

        <localInspection language="Bash" level="WARNING" groupKey="inspection.groupName"
                         shortName="BashUnresolvedVariable"
                         key="inspection.unresolvedVariable.name"
                         enabledByDefault="true"
                         implementationClass="com.ansorgit.plugins.bash.editor.inspections.inspections.UnresolvedVariableInspection"/>

        <localInspection language="Bash" level="INFO" groupKey="inspection.groupName"
                         shortName="BashUnregisterGlobalVariableInspection"
                         key="inspection.unregisterGlovalVariable.name"
                         enabledByDefault="true"
                         implementationClass="com.ansorgit.plugins.bash.editor.inspections.inspections.UnregisterGlobalVarInspection"/>

        <localInspection language="Bash" level="WARNING" groupKey="inspection.groupName"
                         shortName="BashEvaluateArithmeticExpression"
                         key="inspection.evaluateArithmeticExpression.name"
                         enabledByDefault="true"
                         implementationClass="com.ansorgit.plugins.bash.editor.inspections.inspections.EvaluateArithmeticExpressionInspection"/>

        <localInspection language="Bash" level="INFO" groupKey="inspection.groupName"
                         shortName="BashFloatArithmetic"
                         key="inspection.floatArithmetic.name"
                         enabledByDefault="true"
                         implementationClass="com.ansorgit.plugins.bash.editor.inspections.inspections.FloatArithmeticInspection"/>

        <localInspection language="Bash" level="ERROR" groupKey="inspection.groupName"
                         shortName="BashReadOnlyVariable"
                         key="inspection.readOnlyVar.name"
                         enabledByDefault="true"
                         implementationClass="com.ansorgit.plugins.bash.editor.inspections.inspections.ReadonlyVariableInspection"/>

        <localInspection language="Bash" level="WARNING" groupKey="inspection.groupName"
                         shortName="BashBuiltInVariable"
                         key="inspection.builtInVar.name"
                         enabledByDefault="true"
                         implementationClass="com.ansorgit.plugins.bash.editor.inspections.inspections.InternalVariableInspection"/>

        <localInspection language="Bash" level="WARNING" groupKey="inspection.groupName"
                         shortName="BashUnknownFileDescriptor"
                         key="inspection.unknownFileDescriptor.name"
                         enabledByDefault="true"
                         implementationClass="com.ansorgit.plugins.bash.editor.inspections.inspections.UnknownFiledescriptorInspection"/>

        <localInspection language="Bash" level="WARNING" groupKey="inspection.groupName"
                         shortName="BashUnusedFunctionParams"
                         key="inspection.unusedFunctionParams.name"
                         enabledByDefault="true"
                         implementationClass="com.ansorgit.plugins.bash.editor.inspections.inspections.UnusedFunctionParameterInspection"/>

        <localInspection language="Bash" level="INFO" groupKey="inspection.groupName"
                         shortName="BashReplaceWithSubshell"
                         key="inspection.convertBackquote.name"
                         enabledByDefault="false"
                         implementationClass="com.ansorgit.plugins.bash.editor.inspections.inspections.ConvertBackquoteInspection"/>

        <localInspection language="Bash" level="WARNING" groupKey="inspection.groupName"
                         shortName="BashUnusedFunction"
                         key="inspection.unusedFunctionDef.name"
                         enabledByDefault="true"
                         implementationClass="com.ansorgit.plugins.bash.editor.inspections.inspections.UnusedFunctionDefInspection"/>

        <localInspection language="Bash" level="INFO" groupKey="inspection.groupName"
                         shortName="BashSimpleArrayUse"
                         key="inspection.simpleArrayUse.name"
                         enabledByDefault="true"
                         implementationClass="com.ansorgit.plugins.bash.editor.inspections.inspections.SimpleArrayUseInspection"/>

        <localInspection language="Bash" level="WEAK WARNING" groupKey="inspection.groupName"
                         shortName="BashArrayUseOfSimple"
                         key="inspection.arrayUseOfSimpleVar.name"
                         enabledByDefault="true"
                         implementationClass="com.ansorgit.plugins.bash.editor.inspections.inspections.ArrayUseOfSimpleVarInspection"/>

        <localInspection language="Bash" level="WEAK WARNING" groupKey="inspection.groupName"
                         shortName="BashInternalCommandFunctionOverride"
                         key="inspection.internalCommandOverride.name"
                         enabledByDefault="true"
                         implementationClass="com.ansorgit.plugins.bash.editor.inspections.inspections.InternalCommandFunctionOverrideInspection"/>
    </extensions>
</idea-plugin>
